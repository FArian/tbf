<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+/IDN sosy-lab.org/DTD BenchExec benchmark 1.0/EN" "http:/www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="iuv" timelimit="900s" hardtimelimit="950s" cpuCores="8" memlimit="15GB">

  <option name="--naive-verification" />

  <rundefinition name='klee_ex'>
    <option name='-i'>klee</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='klee_ex_ig-timelimit'>
    <option name="-i">klee</option>
    <option name="--execution" />
    <option name="--ig-timelimit">600</option>
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='crest_ex_cfg'>
    <option name='-i'>crest</option>
    <option name="--strategy">cfg</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='crest_ex_dfs'>
    <option name='-i'>crest</option>
    <option name="--strategy">dfs</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='crest_ex_ppc'>
    <option name='-i'>crest</option>
    <option name="--strategy">ppc</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='crest_ex_ppccaching'>
    <option name='-i'>crest</option>
    <option name="--strategy">cfg_ppcWCaching</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='crest_ex_hybrid'>
    <option name='-i'>crest</option>
    <option name="--strategy">hybrid</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='random_ex'>
    <option name="-i">random</option>
    <option name="--execution" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name='klee_cpachecker'>
    <option name='-i'>klee</option>
    <option name="--validators">cpachecker</option>
    <option name="--witness-validation" />
    <resultfiles>**/witness.graphml</resultfiles>
  </rundefinition>
  <rundefinition name='crest_cpachecker'>
    <option name='-i'>crest</option>
    <option name="--validators">cpachecker</option>
    <option name="--witness-validation" />
    <resultfiles>**/witness.graphml</resultfiles>
  </rundefinition>
  <rundefinition name="cpatiger_ex">
    <option name="-i">cpatiger</option>
    <option name="--execution" />
    <option name="--no-parallel" />
    <resultfiles>**/harness.c</resultfiles>
  </rundefinition>
  <rundefinition name="cpatiger_cpachecker">
    <option name="-i">cpatiger</option>
    <option name="--validators">cpachecker</option>
    <option name="--witness-validation" />
    <option name="--no-parallel" />
    <resultfiles>**/witness.graphml</resultfiles>
  </rundefinition>
  <rundefinition name='random_cpachecker'>
    <option name="-i">random</option>
    <option name="--validators">cpachecker</option>
    <option name="--witness-validation" />
    <resultfiles>**/witness.graphml</resultfiles>
  </rundefinition>

  <tasks name="ReachSafety-ArraysReach">
    <includesfile>../sv-benchmarks/c/ReachSafety-Arrays.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-BitVectorsReach">
    <includesfile>../sv-benchmarks/c/ReachSafety-BitVectors.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-HeapReach">
    <includesfile>../sv-benchmarks/c/ReachSafety-Heap.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Floats">
    <includesfile>../sv-benchmarks/c/ReachSafety-Floats.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ControlFlow">
    <includesfile>../sv-benchmarks/c/ReachSafety-ControlFlow.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ECA">
    <includesfile>../sv-benchmarks/c/ReachSafety-ECA.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Loops">
    <includesfile>../sv-benchmarks/c/ReachSafety-Loops.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Recursive">
    <includesfile>../sv-benchmarks/c/ReachSafety-Recursive.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ProductLines">
    <includesfile>../sv-benchmarks/c/ReachSafety-ProductLines.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Sequentialized">
    <includesfile>../sv-benchmarks/c/ReachSafety-Sequentialized.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>
  <tasks name="Systems_DeviceDriversLinux64_ReachSafety">
    <includesfile>../sv-benchmarks/c/Systems_DeviceDriversLinux64_ReachSafety.set</includesfile>
    <propertyfile>../sv-benchmarks/c/PropertyUnreachCall.prp</propertyfile>
  </tasks>

</benchmark>

